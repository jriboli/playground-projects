name: CI/CD Pipeline

# Trigger the workflow on push or pull request events
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Test
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
        
      - name: Set environment variables for staging (or production)
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL_STAGING }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run unit tests
        run: |
          pytest tests/unit --maxfail=1 --disable-warnings -q

      - name: Run integration tests
        run: |
          pytest tests/integration --maxfail=1 --disable-warnings -q

      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=my_project --cov-report=xml

  # Job 2: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only deploy if tests pass
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Deploy to Heroku (example)
        uses: akshnz/heroku-deploy@v3
        with:
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: your-heroku-app-name
          branch: main
